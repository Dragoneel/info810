### Starting build.
# Target: semantic.ml.depends, tags: { extension:ml, file:semantic.ml, ocaml, ocamldep, package(decap), quiet }
/usr/bin/ocamldep.opt -pp pa_ocaml -modules semantic.ml > semantic.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(decap), quiet }
/usr/bin/ocamldep.opt -pp pa_ocaml -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(decap), quiet }
/usr/bin/ocamlc.opt -c -I /usr/lib/ocaml -I /usr/lib/ocaml/decap -pp pa_ocaml -o ast.cmo ast.ml # cached
# Target: semantic.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:semantic.cmo, file:semantic.ml, implem, ocaml, package(decap), quiet }
/usr/bin/ocamlc.opt -c -I /usr/lib/ocaml -I /usr/lib/ocaml/decap -pp pa_ocaml -o semantic.cmo semantic.ml # cached
# Target: semantic.byte, tags: { byte, dont_link_with, extension:byte, file:semantic.byte, link, ocaml, package(decap), program, quiet }
/usr/bin/ocamlc.opt -I /usr/lib/ocaml -I /usr/lib/ocaml/decap unix.cma str.cma decap.cma ast.cmo semantic.cmo -o semantic.byte # cached
# Compilation successful.
